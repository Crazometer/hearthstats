- set_meta_tags :title => 'Arena Matches',
  :description => 'Arena Matches',
  :keywords => 'arena, hearthstats, hearthstone, match, tracking, win, loss'
- provide(:title, 'Recent Games')
- provide(:subtitle, ' recent arena games');
- provide(:section, 'Arena')
- content_for :actions do
  - if ArenaRun.where(user_id: current_user.id).last
    - if !ArenaRun.where(user_id: current_user.id).last.complete
      = link_to 'Continue Arena Run', new_arena_path, class: "btn blue"
    - else
      = link_to 'New Arena Run', new_arena_run_path, class: "btn blue"
  - else
    = link_to 'New Arena Run', new_arena_run_path, class: "btn blue"
- @arenaruns.each do |arena|
  div id="run#{arena.id}" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="run#{arena.id}" aria-hidden="true"
    div.modal-dialog
      div.modal-content
        div.modal-header
          button type="button" class="close" data-dismiss="modal" aria-hidden="true"
          h4 class="modal-title" Arena run with #{arena.userclass} on #{arena.created_at}
        div.modal-body
          =render 'arenagames', arenas: arena.arenas
          div class="portlet box red"
            div class="portlet-title"
              div.caption Notes
            div class="portlet-body"
              =raw arena.notes
        button type="button" class="btn default" data-dismiss="modal" Close
div.arenaheader
  = will_paginate @arenaruns, renderer: BootstrapPagination::Rails
div class="portlet box green"
  div class="portlet-title"
    div class="caption"
      | Recent Arena Games
  div class="portlet-body flip-scroll"
    table class="table table-bordered table-striped table-condensed flip-content"
      thead class="flip-content"
        tr
          th Your Class
          th Win/Loss
          th Prizes
          th Time Played
          th Options
      tbody
      - @arenaruns.each do |arena|
        tr
          td = link_to arena.userclass, race_dashboards_path(:race => arena.userclass)
          td
            span.victory = arena.arenas.where(win: true).count
            |/
            span.defeat = arena.arenas.where(win: false).count
          td #{image_tag('Icons/gold.png', height: 20, width: 20, alt: "Gold Icon")} #{arena.gold} / #{image_tag('Icons/dusticon.png', height: "20", alt: "Dust Icon")} #{arena.dust}
          td = arena.created_at.in_time_zone(@current_user.profile.time_zone).strftime("%I:%M %P on %B %d, %Y")
          td
            = link_to edit_arena_run_path(arena), class: 'btn default btn-xs purple' do
              i class="fa fa-pencil-square-o"
              |Edit
            = link_to arena, method: :delete, data: { confirm: 'Are you sure? This will delete the associated Arena Matches as well.' }, class: 'btn default btn-xs red' do
              i class="fa fa-trash-o"
              |Delete
            a.showmore data-target="#run#{arena.id}" data-toggle="modal" class="btn default btn-xs green" <i class="fa fa-external-link"></i>Show
            - unless arena.notes.blank?
              span class= 'btn default btn-xs blue' title="#{arena.notes}" rel="tooltip"
                i class="fa fa-file-text-o"
                |Notes
=link_to "Archived Games", "/arenas/archives"