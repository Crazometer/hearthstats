- set_meta_tags :title => 'Edit Arena Run',
  :description => 'Edit Arena Run',
  :keywords => 'edit, arena, hearthstats, hearthstone, match, tracking, win, loss'
- provide(:title, 'Edit Arena Run')
- provide(:section, 'Arena')

= form_for @arenarun do |f|
  - if @arenarun.errors.any?
    div#error_explanation
      h2 = pluralize(@arenarun.errors.count, "error")
        | prohibited this arenarun from being saved:
      ul
        - @arenarun.errors.full_messages.each do |msg|
          li = msg
  div.row.arenarunend
    div.col-md-2.form-body
      .form-group
        = f.label "Class"
        .submit
          = f.select :klass_id, options_for_select(klasses_hash.to_a,
            @arenarun.klass_id), class: 'form-control'
      .form-group
        = f.label "Gold Earned"
        .submit
          = f.number_field :gold
      .form-group
        = f.label "Dust Earned"
        .submit
          = f.number_field :dust
      .form-group
        button type="submit" class = 'btn btn-success'
          |Submit <i class='fa fa-check'></i>
    div.col-md-10
      = f.label "Notes"
      = f.text_area :notes, :class => "redactor arena_text", :rows => 10
div.row.arenaedit_notes.quick_con_entry
  h3 Add Match
  = form_for Match.new, url: {controller: "arenas", action: "quickentry", mode: "matches"} do |f|
    = f.select :oppclass_id, options_for_select(klasses_hash.to_a), class: 'quick_input'
    input name="match[coin]" rel="toggle-btn" type="checkbox" on="No Coin" off="Coin"
    = f.submit "Add Win", class: "btn btn-primary"
    = f.submit "Add Defeat", class: "btn btn-primary red"
    = f.submit "Add Draw", class: "btn btn-primary yellow"
    = number_field_tag :arena_run_id , @arenarun.id , :class => "hidden"

div.row.arenaedit_notes
  h3 Matches in Arena Run
  = render :template => 'shared/matchlist_no_filter', :locals => { :matches => @arenarun.matches, :type => "Arena", :filter => false }
javascript:
  app.UI.initClassSelector('#match_oppclass_id');
